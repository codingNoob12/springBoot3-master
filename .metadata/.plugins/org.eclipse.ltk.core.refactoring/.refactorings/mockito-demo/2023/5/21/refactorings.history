<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract local variable &apos;dataServiceStub&apos; from expression &apos;new DataServiceStub()&apos;&#x0A;- Original project: &apos;mockito-demo&apos;&#x0A;- Variable name: &apos;dataServiceStub&apos;&#x0A;- Destination method: &apos;com.in28minutes.mockito.mockitodemo.business.SomeBusinessImplTest.test()&apos;&#x0A;- Variable expression: &apos;new DataServiceStub()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;dataServiceStub&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src\/test\/java=/optional=/true=/=/maven.pomderived=/true=/=/test=/true=/&lt;com.in28minutes.mockito.mockitodemo.business{SomeBusinessImplTest.java" name="dataServiceStub" replace="true" selection="249 21" stamp="1684652421723" varType="false" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;com.in28minutes.mockito.mockitodemo.business.SomeBusinessImplTest&apos; to &apos;SomeBusinessImplStubTest&apos;&#x0A;- Original project: &apos;mockito-demo&apos;&#x0A;- Original element: &apos;com.in28minutes.mockito.mockitodemo.business.SomeBusinessImplTest&apos;&#x0A;- Renamed element: &apos;com.in28minutes.mockito.mockitodemo.business.SomeBusinessImplStubTest&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;SomeBusinessImplTest&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src\/test\/java=/optional=/true=/=/maven.pomderived=/true=/=/test=/true=/&lt;com.in28minutes.mockito.mockitodemo.business{SomeBusinessImplTest.java[SomeBusinessImplTest" matchStrategy="1" name="SomeBusinessImplStubTest" qualified="false" references="true" similarDeclarations="false" stamp="1684652847502" textual="false" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;SomeBusinessImplStubTest.java&apos; to &apos;com.in28minutes.mockito.mockitodemo.business.SomeBusinessImplStubTest.java&apos;&#x0A;- Original project: &apos;mockito-demo&apos;&#x0A;- Destination element: &apos;com.in28minutes.mockito.mockitodemo.business.SomeBusinessImplStubTest.java&apos;&#x0A;- Original element: &apos;com.in28minutes.mockito.mockitodemo.business.SomeBusinessImplStubTest.java&apos;" description="Copy compilation unit" destination="/src\/test\/java=/optional=/true=/=/maven.pomderived=/true=/=/test=/true=/&lt;com.in28minutes.mockito.mockitodemo.business{SomeBusinessImplStubTest.java" element1="/src\/test\/java=/optional=/true=/=/maven.pomderived=/true=/=/test=/true=/&lt;com.in28minutes.mockito.mockitodemo.business{SomeBusinessImplStubTest.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1684652865195" units="1" version="1.0"/>&#x0A;<refactoring comment="Inline local variable &apos;com.in28minutes.mockito.mockitodemo.business.SomeBusinessImplMockTest.findTheGreatestFromAllData_basicScenario().result&apos; in &apos;com.in28minutes.mockito.mockitodemo.business.SomeBusinessImplMockTest.findTheGreatestFromAllData_basicScenario()&apos;&#x0A;- Original project: &apos;mockito-demo&apos;&#x0A;- Original element: &apos;com.in28minutes.mockito.mockitodemo.business.SomeBusinessImplMockTest.findTheGreatestFromAllData_basicScenario().result&apos;" description="Inline local variable &apos;result&apos;" id="org.eclipse.jdt.ui.inline.temp" input="/src\/test\/java=/optional=/true=/=/maven.pomderived=/true=/=/test=/true=/&lt;com.in28minutes.mockito.mockitodemo.business{SomeBusinessImplMockTest.java" selection="690 6" stamp="1684653132602" version="1.0"/>
</session>